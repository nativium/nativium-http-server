// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proj.djinni

#include "nativium/net/http/NTVHttpServer.hpp"  // my header

namespace djinni_generated {

em::val NTVHttpServer::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "initialize",
        "start",
    });
    return methods;
}

em::val NTVHttpServer::shared() {
    try {
        auto r = ::nativium::net::http::HttpServer::shared();
        return ::djinni_generated::NTVHttpServer::fromCpp(r);
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<::djinni_generated::NTVHttpServer>::handleNativeException(e);
    }
}
void NTVHttpServer::initialize(const CppType& self) {
    try {
        self->initialize();
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NTVHttpServer::start(const CppType& self) {
    try {
        self->start();
    }
    catch(const std::exception& e) {
        return djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(nativium_net_http_http_server) {
    em::class_<::nativium::net::http::HttpServer>("HttpServer")
        .smart_ptr<std::shared_ptr<::nativium::net::http::HttpServer>>("HttpServer")
        .function("nativeDestroy", &NTVHttpServer::nativeDestroy)
        .class_function("shared", NTVHttpServer::shared)
        .function("initialize", NTVHttpServer::initialize)
        .function("start", NTVHttpServer::start)
        ;
}

}  // namespace djinni_generated
